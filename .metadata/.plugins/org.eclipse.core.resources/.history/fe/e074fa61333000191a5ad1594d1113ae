package application.controller;

import application.model.StartModel;
import javafx.beans.property.BooleanProperty;
import javafx.beans.property.SimpleBooleanProperty;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.RadioMenuItem;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.text.Text;

public class PanelController {
	private RootController root;
	private GameController blackjackController;
	private PokerController pokerController;
	private int number;
	private int house;
	private BooleanProperty bettingOn = new SimpleBooleanProperty(false);
	
	@FXML
	Button deal;
	
	@FXML
	Button hit;
	
	@FXML
	Button hold;
	
	@FXML
	Button quit;
	
	@FXML
	Text money;
	
	@FXML
	Text bettingMoney;
	
	@FXML
	TextField placeBet;
	
	@FXML
	Button betButton;
	
	@FXML
	RadioMenuItem toggleBetting;
	
	@FXML
	public void handleDeal() {
		//switch(root.getActiveGame()) {
		//	case "blackjack":
				blackjackController.handleHold();
		//		break;
		//	case "poker":
		//		break;
		//}
	}//
	
	@FXML
	public void handleHit() {
		switch(root.getActiveGame()) {
			case "blackjack":
				break;
			case "poker":
				break;
		}
	}
	
	@FXML
	public void handleHold() {
		switch(root.getActiveGame()) {
			case "blackjack":
				break;
			case "poker":
				break;
		}
	}
	
	@FXML
	public void handleQuit() {
		System.exit(0);
	}
	
	@FXML
	public void handleBet() {
		/*if(placeBet.getText().matches("\\d+") && Integer.parseInt(placeBet.getText()) <= startMod.getMoney()) {
			deal.setDisable(false);
			bettingMoney.setText(placeBet.getText());
			startMod.changeMoney(-Integer.parseInt(placeBet.getText()));
			money.setText(Integer.toString(startMod.getMoney()));
			placeBet.getStyleClass().removeAll("warning");
			betButton.setDisable(true);
			bettingOn.set(true);
			placeBet.setText("");
		}
		else {
			placeBet.setText("");
			placeBet.getStyleClass().add("warning");
		}*/
	}
	
	public void reset() {
		/*if(bettingOn.get()) {
			if((house > 21 || (house < number && house < 21)) && number < 21) {
				startMod.changeMoney(Integer.parseInt(bettingMoney.getText())*2);
				money.setText(Integer.toString(startMod.getMoney()));
			}
			if(house == number) {
				startMod.changeMoney((int)(Integer.parseInt(bettingMoney.getText())));
				money.setText(Integer.toString(startMod.getMoney()));
			}
			if(number == 21) {
				startMod.changeMoney((int)(Integer.parseInt(bettingMoney.getText())*2.5));
				money.setText(Integer.toString(startMod.getMoney()));
			}
			else {
				money.setText(Integer.toString(startMod.getMoney()));
			}
			bettingMoney.setText("0");
			bettingOn.set(false);
		}
		
		betButton.setDisable(false);
		hit.setDisable(true);
		hold.setDisable(true);
		
		if(hideCard != null) {
			hideCard.getChildren().get(0).getStyleClass().remove("hide");
			hideCard.getChildren().get(1).getStyleClass().remove("hide");
			hideCard.getChildren().get(2).getStyleClass().remove("hide");
		}*/
	}
	
	public void setRoot(RootController root, GameController blackjackController, PokerController pokerController) {
		this.root = root;
		this.blackjackController = blackjackController;
		this.pokerController = pokerController;
	}
}
